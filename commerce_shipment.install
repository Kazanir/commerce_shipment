<?php
/**
 * @file
 * Install, update and uninstall functions for the Commerce Shipment module.
 */

/**
 * Implements hook_schema().
 */
function commerce_shipment_schema() {
  $schema = array();

  $schema['commerce_shipment'] = array(
    'description' => 'The base table for shipment entities.',
    'fields' => array(
      'shipment_id' => array(
        'description' => 'The primary identifier for a shipment entity.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'The module defined type of this shipment entity.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'status' => array(
        'description' => 'Boolean indicating whether or not the shipment is active.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 1,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the shipment was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the shipment was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('shipment_id'),
    'indexes' => array(
      'shipment_type' => array('type'),
    ),
  );
  if (module_exists('uuid')) {
    $schema['commerce_shipment']['fields']['uuid'] = uuid_schema_field_definition();
  }

  return $schema;
}

/**
 * Field config and instance definitions.
 *
 * @return array
 *   The fields and their instances, keyed by field name, this module creates.
 */
function commerce_shipment_installed_fields() {
  $fields = array();

  // Commerce Shipment Tracking Number field base.
  $fields['field_base']['commerce_shipment_tracking_num'] = array(
    'active' => 1,
    'cardinality' => 1,
    'deleted' => 0,
    'entity_types' => array(),
    'field_name' => 'commerce_shipment_tracking_num',
    'foreign keys' => array(
      'format' => array(
        'columns' => array(
          'format' => 'format',
        ),
        'table' => 'filter_format',
      ),
    ),
    'indexes' => array(
      'format' => array(
        0 => 'format',
      ),
    ),
    'locked' => 0,
    'module' => 'text',
    'settings' => array(
      'max_length' => 255,
    ),
    'translatable' => 0,
    'type' => 'text',
  );

  // Commerce Shipment Tracking Number field instance.
  $fields['field_instance']['commerce_shipment_tracking_num'] = array(
    'bundle' => 'shipment',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'text',
        'settings' => array(),
        'type' => 'text_default',
        'weight' => 0,
      ),
    ),
    'entity_type' => 'commerce_shipment',
    'field_name' => 'commerce_shipment_tracking_num',
    'label' => 'Tracking Number',
    'required' => 0,
    'settings' => array(
      'text_processing' => 0,
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'text',
      'settings' => array(
        'size' => 60,
      ),
      'type' => 'text_textfield',
      'weight' => 1,
    ),
  );

  return $fields;
}

/**
 * Implements hook_install().
 */
function commerce_shipment_install() {
  commerce_shipment_install_fields();
}

/**
 * Create fields and field instances.
 */
function commerce_shipment_install_fields() {
  $fields = commerce_shipment_installed_fields();
  // Add all fields.
  foreach ($fields['field_base'] as $field) {
    // Look for existing field.
    $field_base = field_info_field($field['field_name']);
    if (empty($field_base)) {
      field_create_field($field);
    }
  }
  // Add all field instances.
  foreach ($fields['field_instance'] as $field_instance) {
    // Look for existing instance.
    $instance = field_info_instance($field_instance['entity_type'], $field_instance['field_name'], $field_instance['bundle']);
    if (empty($instance)) {
      field_create_instance($field_instance);
    }
  }
}

/**
 * Implements hook_uninstall().
 */
function commerce_shipment_uninstall() {
  $fields = commerce_shipment_installed_fields();
  // Delete all fields, their instances, and data, this module creates.
  foreach ($fields['field_base'] as $field_base) {
    field_delete_field($field_base['field_name']);
  }

  field_purge_batch(1000);
}
